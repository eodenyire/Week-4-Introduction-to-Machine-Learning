# -*- coding: utf-8 -*-
"""Week 4 Introduction to Machine Learning Independent Project- Emmanuel Odenyire

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19UotS_GksyaUsPnBnSX_frvc6rRBW0KN

# Introduction to Machine Learning

## Problem Statement

#### **Background Information**

HR analytics is revolutionising the way human resources departments operate, leading to higher efficiency and better results overall. Human resources have been using analytics for years. However, the collection, processing, and analysis of data have been largely manual, and given the nature of human resources dynamics and HR KPIs, the approach has been constraining HR. Therefore, it is surprising that HR departments woke up to the utility of machine learning so late in the game.

#### **Problem Statement**

Your client is a large Multinational Corporation, and they have nine broad verticals across the organization. One of the problems your client faces is identifying the right people for promotion (only for the manager position and below) and preparing them in time. Currently the process, they are following is: 



*   They first identify a set of employees based on recommendations/ past performance.
*   Selected employees go through the separate training and evaluation program for each vertical. 
*  These programs are based on the required skill of each vertical. At the end of the program, based on various factors such as training performance, KPI completion (only employees with KPIs completed greater than 60% are considered) etc., the employee gets a promotion.

For the process mentioned above, the final promotions are only announced after the evaluation, and this leads to a delay in transition to their new roles. Hence, the company needs your help in identifying the eligible candidates at a particular checkpoint so that they can expedite the entire promotion cycle. 

They have provided multiple attributes around employeesâ€™ past and current performance along with demographics. Now, The task is to predict whether a potential promotee at a checkpoint will be promoted or not after the evaluation process.

## Data Exploration
"""

#importing the encessary libraries
import pandas as pd
import numpy as np

#Reading the data in the dataset
# Dataset URL: https://bit.ly/2ODZvLCHRDataset
# Glossary URL = 'https://bit.ly/2Wz3sWcGlossary'

promotions_df = pd.read_csv('https://bit.ly/2ODZvLCHRDataset')

promotions_df.head()

#Getting the shape of the df gives us the numbe rof rows and columns
promotions_df.shape

# Describing the data using info() function
promotions_df.info()

#Let us see the amount of data on each target
promotions_df['is_promoted'].value_counts()

# Expressing those promoted and those not as a percentage
print('1. The percentage of employees who have not received a promotion are ' 
      + str(round(((promotions_df["is_promoted"].isin([0]).sum())/promotions_df.shape[0])*100,2)) + ' %')
print('2. The percentage of employees who get promoted are ' 
      + str(round(((promotions_df["is_promoted"].isin([1]).sum())/promotions_df.shape[0])*100,2)) + ' %')

"""##Data Preparation"""

# Standardizing a dataset by stripping the leading and trailing spaces
promotions_df.columns = promotions_df.columns.str.strip()

# Checking for missing data in a dataset.
promotions_df.isna().sum()

# Replacing the missing data in the previous_year_rating column with the mean
mean_value = promotions_df['previous_year_rating'].mean()
promotions_df['previous_year_rating'].fillna(value=mean_value, inplace=True)

# Replacing the missing education value with no education
promotions_df['education'].fillna(value="No Education", inplace=True)

#Checking for the missing records to confirm replacement
promotions_df.isna().sum()

#Performing data type conversion to fix previous year ratings to int
promotions_df['previous_year_rating'] = promotions_df['previous_year_rating'].astype(np.int64)

#Rechecking the data types to confirm changes required
promotions_df.info()

# Finding duplicates again in the dataset.
promotions_df.duplicated().sum()

# Checking the correlation of features and target and importing additional necesary libraries

import matplotlib.pyplot as plt
import seaborn as sns

features = ['no_of_trainings','age','previous_year_rating','length_of_service','KPIs_met >80%','awards_won?','avg_training_score','is_promoted']
corr_= promotions_df[features].corr()
plt.figure(figsize=(10,8))
sns.heatmap(corr_, annot=True, fmt = ".2f", cmap = "Spectral");

# Plotting an Histogram for features to show the relationship between features and the targets 
for feature in features[:-1]:
  plt.hist(promotions_df[promotions_df['is_promoted']==1][feature], color= 'blue', alpha = 0.7, label = 'Promoted', density=True)
  plt.hist(promotions_df[promotions_df['is_promoted']==0][feature], color= 'red', alpha = 0.7, label = 'Not Promoted', density=True)
  plt.title(feature)
  plt.ylabel('Probability')
  plt.xlabel(feature)
  plt.legend()
  plt.show()

"""**Observation**

Some features i.e previous year rating, KPIs_met >80%, and awards won on the dataset show that you are most likely to be promoted according to the relationships seen between features and targets

##Data Modeling
"""

#Defining features and targets

#ImportING the necessary functions from sklearn
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split


features = promotions_df.drop(['education', 'recruitment_channel', 'is_promoted', 'department','region','gender'], axis=1)
target = promotions_df['is_promoted']

x_train, x_test, y_train, y_test = train_test_split(features, target, test_size=0.2, random_state=42)

model = DecisionTreeClassifier()
model.fit(x_train, y_train)

test_predictions = model.predict(x_test)

print('Predictions:', test_predictions)
print('Correct answers:', y_test.values)

# Checking the accuracy of the models built
from sklearn.metrics import accuracy_score 
score = accuracy_score(y_test, test_predictions)  
score

"""##Summary of Findings and Recommendations

The data in the dataset was first cleaned, then analysed before developing the said model. All numerical data was used as the features to determine the target. Using heatmaps and histograms populated, we were able to see the relationships between the features and our target. 

We trained a model using DecisionTreeClassifier() with an accuracy of 87% which is acceptable

This model will therefore allow the HR department to predict candidates eligible for promotion with a reasonable accuracy
"""